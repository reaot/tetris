#[rustfmt::skip]
const GLYPHS_NUMBERS: [[u8; 16]; 10] = [
  [
    0b00000000,
    0b00000000,
    0b00000000,
    0b00111100,
    0b01000010,
    0b01000010,
    0b01000110,
    0b01001010,
    0b01010010,
    0b01100010,
    0b01000010,
    0b01000010,
    0b00111100,
    0b00000000,
    0b00000000,
    0b00000000,
  ],
  [
    0b00000000,
    0b00000000,
    0b00000000,
    0b00001000,
    0b00011000,
    0b00101000,
    0b00001000,
    0b00001000,
    0b00001000,
    0b00001000,
    0b00001000,
    0b00001000,
    0b00111110,
    0b00000000,
    0b00000000,
    0b00000000,
  ],
  [
    0b00000000,
    0b00000000,
    0b00000000,
    0b00111100,
    0b01000010,
    0b01000010,
    0b00000010,
    0b00000100,
    0b00001000,
    0b00010000,
    0b00100000,
    0b01000000,
    0b01111110,
    0b00000000,
    0b00000000,
    0b00000000,
  ],
  [
    0b00000000,
    0b00000000,
    0b00000000,
    0b00111100,
    0b01000010,
    0b01000010,
    0b00000010,
    0b00011100,
    0b00000010,
    0b00000010,
    0b01000010,
    0b01000010,
    0b00111100,
    0b00000000,
    0b00000000,
    0b00000000,
  ],
  [
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000010,
    0b00000110,
    0b00001010,
    0b00010010,
    0b00100010,
    0b01000010,
    0b01111110,
    0b00000010,
    0b00000010,
    0b00000010,
    0b00000000,
    0b00000000,
    0b00000000,
  ],
  [
    0b00000000,
    0b00000000,
    0b00000000,
    0b01111110,
    0b01000000,
    0b01000000,
    0b01000000,
    0b01111100,
    0b00000010,
    0b00000010,
    0b00000010,
    0b01000010,
    0b00111100,
    0b00000000,
    0b00000000,
    0b00000000,
  ],
  [
    0b00000000,
    0b00000000,
    0b00000000,
    0b00011100,
    0b00100000,
    0b01000000,
    0b01000000,
    0b01111100,
    0b01000010,
    0b01000010,
    0b01000010,
    0b01000010,
    0b00111100,
    0b00000000,
    0b00000000,
    0b00000000,
  ],
  [
    0b00000000,
    0b00000000,
    0b00000000,
    0b01111110,
    0b00000010,
    0b00000010,
    0b00000100,
    0b00000100,
    0b00001000,
    0b00001000,
    0b00010000,
    0b00010000,
    0b00010000,
    0b00000000,
    0b00000000,
    0b00000000,
  ],
  [
    0b00000000,
    0b00000000,
    0b00000000,
    0b00111100,
    0b01000010,
    0b01000010,
    0b01000010,
    0b00111100,
    0b01000010,
    0b01000010,
    0b01000010,
    0b01000010,
    0b00111100,
    0b00000000,
    0b00000000,
    0b00000000,
  ],
  [
    0b00000000,
    0b00000000,
    0b00000000,
    0b00111100,
    0b01000010,
    0b01000010,
    0b01000010,
    0b01000010,
    0b00111110,
    0b00000010,
    0b00000010,
    0b00000100,
    0b00111000,
    0b00000000,
    0b00000000,
    0b00000000,
  ],
];

pub fn glyph_x2(i: u32) -> [[bool; 16]; 16] {
    assert!(i < 100);
    let left = i / 10;
    let right = i % 10;

    let mut result = [[false; 16]; 16];

    for y in 0..16 {
        for x in 0..16 {
            result[y][x] = if x < 8 {
                nth_bit(GLYPHS_NUMBERS[left as usize][y], 7 - x)
            } else {
                nth_bit(GLYPHS_NUMBERS[right as usize][y], 7 - (x - 8))
            }
        }
    }

    fn nth_bit(s: u8, n: usize) -> bool {
        (s >> n) % 2 == 1
    }

    result
}
